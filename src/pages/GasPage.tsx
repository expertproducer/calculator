import { useEffect, useMemo, useState } from 'react'
import { motion } from 'framer-motion'
import { Helmet } from 'react-helmet-async'
import { Calculator, RefreshCw, Copy, Fuel, TrendingUp, Car } from 'lucide-react'
import { gasImpact } from '../lib/money'
import { initGA, track } from '../lib/ga'

export default function GasPage() {
  // Initialize GA4
  useEffect(() => {
    initGA()
  }, [])

  // State
  const [gallons, setGallons] = useState<number>(() => Number(localStorage.getItem('wia_gallons')) || 60)
  const [deltaPerGallon, setDeltaPerGallon] = useState<number>(() => Number(localStorage.getItem('wia_dpg')) || 0.10)

  // Save to localStorage
  useEffect(() => { localStorage.setItem('wia_gallons', String(gallons)) }, [gallons])
  useEffect(() => { localStorage.setItem('wia_dpg', String(deltaPerGallon)) }, [deltaPerGallon])

  // Computations
  const monthlyImpact = useMemo(() => gasImpact(gallons, deltaPerGallon), [gallons, deltaPerGallon])
  const yearlyImpact = useMemo(() => monthlyImpact * 12, [monthlyImpact])
  const weeklyImpact = useMemo(() => monthlyImpact / 4, [monthlyImpact])

  const fmtUSD = (n: number) =>
    new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
      maximumFractionDigits: 2,
    }).format(Number.isFinite(n) ? n : 0)

  const copy = async (text: string) => {
    try { 
      await navigator.clipboard.writeText(text)
      alert('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ')
    } catch {}
  }

  const handleCalc = () => {
    track('gas_calc', { gallons, deltaPerGallon })
  }

  const handleCopy = () => {
    track('gas_copy')
    copy(`–í–ª–∏—è–Ω–∏–µ –Ω–∞ –±–µ–Ω–∑–∏–Ω: ${fmtUSD(monthlyImpact)}/–º–µ—Å—è—Ü ‚Ä¢ ${fmtUSD(yearlyImpact)}/–≥–æ–¥ ‚Ä¢ ${fmtUSD(weeklyImpact)}/–Ω–µ–¥–µ–ª—é`)
  }

  const handleReset = () => {
    track('gas_reset')
    setGallons(60)
    setDeltaPerGallon(0.10)
  }

  return (
    <>
      <Helmet>
        <title>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –±–µ–Ω–∑–∏–Ω | Wallet Impact - –ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è —Ü–µ–Ω</title>
        <meta name="description" content="–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–ª–∏—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω –Ω–∞ –±–µ–Ω–∑–∏–Ω –Ω–∞ –≤–∞—à –±—é–¥–∂–µ—Ç. –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –º–µ—Å—è—á–Ω—ã–µ –∏ –≥–æ–¥–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã." />
        <meta name="keywords" content="–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–µ–Ω–∑–∏–Ω–∞, —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ç–æ–ø–ª–∏–≤–æ, –≤–ª–∏—è–Ω–∏–µ —Ü–µ–Ω –Ω–∞ –±–µ–Ω–∑–∏–Ω, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç" />
        <meta property="og:title" content="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –±–µ–Ω–∑–∏–Ω | Wallet Impact" />
        <meta property="og:description" content="–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–ª–∏—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω –Ω–∞ –±–µ–Ω–∑–∏–Ω –Ω–∞ –≤–∞—à –±—é–¥–∂–µ—Ç" />
      </Helmet>

      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="text-center mb-12"
        >
          <div className="flex items-center justify-center gap-3 mb-4">
            <div className="w-12 h-12 bg-amber-600/20 border border-amber-600/30 rounded-xl flex items-center justify-center">
              <Fuel className="w-6 h-6 text-amber-400" />
            </div>
            <h1 className="text-3xl md:text-4xl font-bold text-white">
              –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –±–µ–Ω–∑–∏–Ω
            </h1>
          </div>
          <p className="text-xl text-slate-300 max-w-2xl mx-auto">
            –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–ª–∏—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω –Ω–∞ –±–µ–Ω–∑–∏–Ω –Ω–∞ –≤–∞—à –±—é–¥–∂–µ—Ç
          </p>
        </motion.div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          className="bg-slate-900/60 border border-slate-800 rounded-2xl p-6 shadow-xl mb-8"
        >
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –±–µ–Ω–∑–∏–Ω–∞ */}
            <div>
              <h2 className="text-xl font-semibold text-white mb-4 flex items-center gap-2">
                <Car className="w-5 h-5 text-amber-400" />
                –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –±–µ–Ω–∑–∏–Ω–∞
              </h2>
              <div className="space-y-4">
                <LabeledNumber 
                  label="–ì–∞–ª–ª–æ–Ω–æ–≤ –≤ –º–µ—Å—è—Ü" 
                  value={gallons} 
                  onChange={setGallons} 
                  step={1} 
                />
                <div className="p-3 bg-slate-950/40 border border-slate-800 rounded-lg">
                  <div className="text-xs text-slate-400 mb-1">–ü—Ä–∏–º–µ—Ä–Ω–æ –≥–∞–ª–ª–æ–Ω–æ–≤ –≤ –Ω–µ–¥–µ–ª—é</div>
                  <div className="text-lg font-semibold text-amber-400">
                    {(gallons / 4).toFixed(1)}
                  </div>
                </div>
              </div>
            </div>

            {/* –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω */}
            <div>
              <h2 className="text-xl font-semibold text-white mb-4 flex items-center gap-2">
                <TrendingUp className="w-5 h-5 text-emerald-400" />
                –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω
              </h2>
              <div className="space-y-4">
                <LabeledNumber 
                  label="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –∑–∞ –≥–∞–ª–ª–æ–Ω ($)" 
                  value={deltaPerGallon} 
                  onChange={setDeltaPerGallon} 
                  step={0.01} 
                />
                <div className="p-3 bg-slate-950/40 border border-slate-800 rounded-lg">
                  <div className="text-xs text-slate-400 mb-1">–í–ª–∏—è–Ω–∏–µ –Ω–∞ 1 –≥–∞–ª–ª–æ–Ω</div>
                  <div className={`text-lg font-semibold ${deltaPerGallon >= 0 ? 'text-red-400' : 'text-green-400'}`}>
                    {deltaPerGallon >= 0 ? '+' : ''}{fmtUSD(deltaPerGallon)}
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
          <div className="mt-8 grid grid-cols-1 md:grid-cols-3 gap-4">
            <ResultBox title="–í–ª–∏—è–Ω–∏–µ –≤ –º–µ—Å—è—Ü" value={fmtUSD(monthlyImpact)} />
            <ResultBox title="–í–ª–∏—è–Ω–∏–µ –≤ –Ω–µ–¥–µ–ª—é" value={fmtUSD(weeklyImpact)} />
            <ResultBox title="–í–ª–∏—è–Ω–∏–µ –≤ –≥–æ–¥" value={fmtUSD(yearlyImpact)} accent />
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex flex-wrap gap-3 mt-6">
            <ActionButton icon={Calculator} label="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å" onClick={handleCalc} />
            <ActionButton icon={RefreshCw} label="–°–±—Ä–æ—Å–∏—Ç—å" onClick={handleReset} />
            <ActionButton icon={Copy} label="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç" onClick={handleCopy} />
          </div>

          {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
          <div className="mt-4 p-4 bg-amber-900/20 border border-amber-800/30 rounded-xl">
            <p className="text-sm text-amber-300">
              üöó <strong>–°–æ–≤–µ—Ç:</strong> –í–æ–¥–∏—Ç–µ–ª–∏ –∏ –∫—É—Ä—å–µ—Ä—ã: –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –±–µ–Ω–∑–∏–Ω–∞ 
              –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –Ω–µ–¥–µ–ª—å ‚Äî –Ω–µ —É–≥–∞–¥—ã–≤–∞–π—Ç–µ.
            </p>
          </div>
        </motion.div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
          className="grid grid-cols-1 md:grid-cols-2 gap-6"
        >
          <div className="bg-slate-900/40 border border-slate-800 rounded-xl p-6">
            <h3 className="text-lg font-semibold text-white mb-3">–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤–ª–∏—è–Ω–∏–µ</h3>
            <p className="text-slate-300 text-sm leading-relaxed">
              –í–ª–∏—è–Ω–∏–µ = –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∞–ª–ª–æ–Ω–æ–≤ √ó –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –∑–∞ –≥–∞–ª–ª–æ–Ω. 
              –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–∑–Ω–∞—á–∞–µ—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤, 
              –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ ‚Äî —ç–∫–æ–Ω–æ–º–∏—é.
            </p>
          </div>
          
          <div className="bg-slate-900/40 border border-slate-800 rounded-xl p-6">
            <h3 className="text-lg font-semibold text-white mb-3">–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —ç–∫–æ–Ω–æ–º–∏–∏</h3>
            <p className="text-slate-300 text-sm leading-relaxed">
              –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Ü–µ–Ω—ã –Ω–∞ –±–µ–Ω–∑–∏–Ω –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 
              –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—É—á—à–∏—Ö —Ü–µ–Ω, –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç—ã 
              –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–±–µ–≥–∞.
            </p>
          </div>
        </motion.div>

        {/* –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.6 }}
          className="mt-8 text-center"
        >
          <p className="text-xs text-slate-400">
            –ù–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π. –î–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ.
          </p>
        </motion.div>
      </div>
    </>
  )
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
function LabeledNumber({ label, value, onChange, step = 1 }: { 
  label: string; 
  value: number; 
  onChange: (v: number) => void; 
  step?: number; 
}) {
  return (
    <label className="block">
      <div className="text-sm text-slate-400 mb-2">{label}</div>
      <input
        type="number"
        step={step}
        value={Number.isFinite(value) ? value : 0}
        onChange={e => onChange(parseFloat(e.target.value))}
        className="w-full rounded-xl bg-slate-950/50 border border-slate-800 px-4 py-3 text-sm focus:outline-none focus:ring-2 focus:ring-amber-500/30 text-white"
      />
    </label>
  )
}

function ResultBox({ title, value, accent = false }: { 
  title: string; 
  value: string; 
  accent?: boolean; 
}) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 6 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.35 }}
      className={`rounded-xl border px-4 py-3 text-center bg-slate-950/40 ${
        accent 
          ? 'border-amber-700/60 text-amber-300' 
          : 'border-slate-800 text-slate-200'
      }`}
    >
      <div className="text-xs uppercase tracking-wide opacity-70 mb-1">{title}</div>
      <div className="font-semibold tabular-nums text-lg">{value}</div>
    </motion.div>
  )
}

function ActionButton({ icon: Icon, label, onClick }: { 
  icon: any; 
  label: string; 
  onClick: () => void; 
}) {
  return (
    <button
      onClick={onClick}
      className="inline-flex items-center gap-2 rounded-xl border border-slate-800 bg-slate-900/70 px-4 py-2 text-sm hover:bg-slate-800/70 transition shadow text-white"
    >
      <Icon className="w-4 h-4" /> {label}
    </button>
  )
} 