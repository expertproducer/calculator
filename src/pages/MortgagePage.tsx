import { useEffect, useMemo, useState } from 'react'
import { motion } from 'framer-motion'
import { Helmet } from 'react-helmet-async'
import { Calculator, RefreshCw, Copy, Building2, TrendingDown, DollarSign, Calendar } from 'lucide-react'
import { monthlyPayment } from '../lib/money'
import { initGA, track } from '../lib/ga'

export default function MortgagePage() {
  // Initialize GA4
  useEffect(() => {
    initGA()
  }, [])

  // State
  const [principal, setPrincipal] = useState<number>(() => Number(localStorage.getItem('wia_principal')) || 400000)
  const [years, setYears] = useState<number>(() => Number(localStorage.getItem('wia_years')) || 30)
  const [oldRate, setOldRate] = useState<number>(() => Number(localStorage.getItem('wia_oldRate')) || 6.63)
  const [newRate, setNewRate] = useState<number>(() => Number(localStorage.getItem('wia_newRate')) || 6.58)

  // Save to localStorage
  useEffect(() => { localStorage.setItem('wia_principal', String(principal)) }, [principal])
  useEffect(() => { localStorage.setItem('wia_years', String(years)) }, [years])
  useEffect(() => { localStorage.setItem('wia_oldRate', String(oldRate)) }, [oldRate])
  useEffect(() => { localStorage.setItem('wia_newRate', String(newRate)) }, [newRate])

  // Computations
  const oldMonthly = useMemo(() => monthlyPayment(principal, oldRate, years), [principal, oldRate, years])
  const newMonthly = useMemo(() => monthlyPayment(principal, newRate, years), [principal, newRate, years])
  const mortgageDelta = useMemo(() => oldMonthly - newMonthly, [oldMonthly, newMonthly])

  const fmtUSD = (n: number) =>
    new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
      maximumFractionDigits: 2,
    }).format(Number.isFinite(n) ? n : 0)

  const copy = async (text: string) => {
    try { 
      await navigator.clipboard.writeText(text)
      alert('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ')
    } catch {}
  }

  const handleCalc = () => {
    track('mortgage_calc', { principal, years, oldRate, newRate })
  }

  const handleCopy = () => {
    track('mortgage_copy')
    copy(`–°—Ç–∞—Ä–∞—è —Å—Ç–∞–≤–∫–∞: ${fmtUSD(oldMonthly)} | –ù–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: ${fmtUSD(newMonthly)} | –≠–∫–æ–Ω–æ–º–∏—è: ${fmtUSD(mortgageDelta)}`)
  }

  const handleReset = () => {
    track('mortgage_reset')
    setPrincipal(400000)
    setYears(30)
    setOldRate(6.63)
    setNewRate(6.58)
  }

  return (
    <>
      <Helmet>
        <title>–ò–ø–æ—Ç–µ—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä | Wallet Impact - –†–∞—Å—á–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π –∏ —ç–∫–æ–Ω–æ–º–∏–∏</title>
        <meta name="description" content="–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, —Å—Ä–∞–≤–Ω–∏—Ç–µ —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ –∏ —É–∑–Ω–∞–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ –≤—ã —Å—ç–∫–æ–Ω–æ–º–∏—Ç–µ –ø—Ä–∏ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–∏." />
        <meta name="keywords" content="–∏–ø–æ—Ç–µ—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, —Ä–∞—Å—á–µ—Ç –∏–ø–æ—Ç–µ–∫–∏, –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏, —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏, –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏" />
        <meta property="og:title" content="–ò–ø–æ—Ç–µ—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä | Wallet Impact" />
        <meta property="og:description" content="–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ –∏ —ç–∫–æ–Ω–æ–º–∏—é –ø—Ä–∏ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–∏" />
      </Helmet>

      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="text-center mb-12"
        >
          <div className="flex items-center justify-center gap-3 mb-4">
            <div className="w-12 h-12 bg-emerald-600/20 border border-emerald-600/30 rounded-xl flex items-center justify-center">
              <Building2 className="w-6 h-6 text-emerald-400" />
            </div>
            <h1 className="text-3xl md:text-4xl font-bold text-white">
              –ò–ø–æ—Ç–µ—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
            </h1>
          </div>
          <p className="text-xl text-slate-300 max-w-2xl mx-auto">
            –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ –∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏
          </p>
        </motion.div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          className="bg-slate-900/60 border border-slate-800 rounded-2xl p-6 shadow-xl mb-8"
        >
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫—Ä–µ–¥–∏—Ç–∞ */}
            <div>
              <h2 className="text-xl font-semibold text-white mb-4 flex items-center gap-2">
                <DollarSign className="w-5 h-5 text-emerald-400" />
                –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫—Ä–µ–¥–∏—Ç–∞
              </h2>
              <div className="space-y-4">
                <LabeledNumber 
                  label="–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ ($)" 
                  value={principal} 
                  onChange={setPrincipal} 
                  step={1000} 
                />
                <LabeledNumber 
                  label="–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ (–ª–µ—Ç)" 
                  value={years} 
                  onChange={setYears} 
                  step={1} 
                />
              </div>
            </div>

            {/* –ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ */}
            <div>
              <h2 className="text-xl font-semibold text-white mb-4 flex items-center gap-2">
                <TrendingDown className="w-5 h-5 text-blue-400" />
                –ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏
              </h2>
              <div className="space-y-4">
                <LabeledNumber 
                  label="–°—Ç–∞—Ä–∞—è —Å—Ç–∞–≤–∫–∞ (%)" 
                  value={oldRate} 
                  onChange={setOldRate} 
                  step={0.01} 
                />
                <LabeledNumber 
                  label="–ù–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ (%)" 
                  value={newRate} 
                  onChange={setNewRate} 
                  step={0.01} 
                />
              </div>
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
          <div className="mt-8 grid grid-cols-1 md:grid-cols-3 gap-4">
            <ResultBox title="–ü–ª–∞—Ç–µ–∂ (—Å—Ç–∞—Ä–∞—è —Å—Ç–∞–≤–∫–∞)" value={fmtUSD(oldMonthly)} />
            <ResultBox title="–ü–ª–∞—Ç–µ–∂ (–Ω–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞)" value={fmtUSD(newMonthly)} />
            <ResultBox title="–≠–∫–æ–Ω–æ–º–∏—è –≤ –º–µ—Å—è—Ü" value={fmtUSD(mortgageDelta)} accent />
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex flex-wrap gap-3 mt-6">
            <ActionButton icon={Calculator} label="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å" onClick={handleCalc} />
            <ActionButton icon={RefreshCw} label="–°–±—Ä–æ—Å–∏—Ç—å" onClick={handleReset} />
            <ActionButton icon={Copy} label="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç" onClick={handleCopy} />
          </div>

          {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
          <div className="mt-4 p-4 bg-emerald-900/20 border border-emerald-800/30 rounded-xl">
            <p className="text-sm text-emerald-300">
              üí° <strong>–°–æ–≤–µ—Ç:</strong> –ü–æ–∫—É–ø–∫–∞ –¥–∏—Å–∫–æ–Ω—Ç–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ —Å–Ω–∏–∂–∞–µ—Ç –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏, 
              –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç. –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –≤—Ä–µ–º—è –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏.
            </p>
          </div>
        </motion.div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
          className="grid grid-cols-1 md:grid-cols-2 gap-6"
        >
          <div className="bg-slate-900/40 border border-slate-800 rounded-xl p-6">
            <h3 className="text-lg font-semibold text-white mb-3">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h3>
            <p className="text-slate-300 text-sm leading-relaxed">
              –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ñ–æ—Ä–º—É–ª—É –∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ 
              –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö –≤–∑–Ω–æ—Å–æ–≤ –ø–æ –∏–ø–æ—Ç–µ–∫–µ. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∏ –Ω–æ–≤–æ–π —Å—Ç–∞–≤–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 
              –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é —ç–∫–æ–Ω–æ–º–∏—é –ø—Ä–∏ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–∏.
            </p>
          </div>
          
          <div className="bg-slate-900/40 border border-slate-800 rounded-xl p-6">
            <h3 className="text-lg font-semibold text-white mb-3">–ö–æ–≥–¥–∞ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å</h3>
            <p className="text-slate-300 text-sm leading-relaxed">
              –†–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª, –µ—Å–ª–∏ –Ω–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –Ω–∞ 0.5-1% –Ω–∏–∂–µ —Ç–µ–∫—É—â–µ–π 
              –∏ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –¥–æ–º–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–ª–≥–æ –¥–ª—è –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏ 
              –∑–∞—Ç—Ä–∞—Ç –Ω–∞ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ.
            </p>
          </div>
        </motion.div>

        {/* –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.6 }}
          className="mt-8 text-center"
        >
          <p className="text-xs text-slate-400">
            –ù–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π. –î–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ.
          </p>
        </motion.div>
      </div>
    </>
  )
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
function LabeledNumber({ label, value, onChange, step = 1 }: { 
  label: string; 
  value: number; 
  onChange: (v: number) => void; 
  step?: number; 
}) {
  return (
    <label className="block">
      <div className="text-sm text-slate-400 mb-2">{label}</div>
      <input
        type="number"
        step={step}
        value={Number.isFinite(value) ? value : 0}
        onChange={e => onChange(parseFloat(e.target.value))}
        className="w-full rounded-xl bg-slate-950/50 border border-slate-800 px-4 py-3 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-500/30 text-white"
      />
    </label>
  )
}

function ResultBox({ title, value, accent = false }: { 
  title: string; 
  value: string; 
  accent?: boolean; 
}) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 6 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.35 }}
      className={`rounded-xl border px-4 py-3 text-center bg-slate-950/40 ${
        accent 
          ? 'border-emerald-700/60 text-emerald-300' 
          : 'border-slate-800 text-slate-200'
      }`}
    >
      <div className="text-xs uppercase tracking-wide opacity-70 mb-1">{title}</div>
      <div className="font-semibold tabular-nums text-lg">{value}</div>
    </motion.div>
  )
}

function ActionButton({ icon: Icon, label, onClick }: { 
  icon: any; 
  label: string; 
  onClick: () => void; 
}) {
  return (
    <button
      onClick={onClick}
      className="inline-flex items-center gap-2 rounded-xl border border-slate-800 bg-slate-900/70 px-4 py-2 text-sm hover:bg-slate-800/70 transition shadow text-white"
    >
      <Icon className="w-4 h-4" /> {label}
    </button>
  )
} 