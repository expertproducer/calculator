const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏
function removeDirectory(dirPath) {
  if (fs.existsSync(dirPath)) {
    console.log(`–£–¥–∞–ª—è—é –ø–∞–ø–∫—É: ${dirPath}`);
    fs.rmSync(dirPath, { recursive: true, force: true });
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
function removeFile(filePath) {
  if (fs.existsSync(filePath)) {
    console.log(`–£–¥–∞–ª—è—é —Ñ–∞–π–ª: ${filePath}`);
    fs.unlinkSync(filePath);
  }
}

// –û—á–∏—â–∞–µ–º –ø–∞–ø–∫–∏ —Å–±–æ—Ä–∫–∏
const dirsToRemove = [
  '.next',
  'out',
  'build',
  'dist',
  'node_modules/.cache'
];

dirsToRemove.forEach(dir => removeDirectory(dir));

// –û—á–∏—â–∞–µ–º npm –∫—ç—à
console.log('üßπ –û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞...');
try {
  execSync('npm cache clean --force', { stdio: 'inherit' });
} catch (error) {
  console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å npm –∫—ç—à');
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ
console.log('üì¶ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
try {
  execSync('npm ci', { stdio: 'inherit' });
} catch (error) {
  console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å npm ci, –ø—Ä–æ–±—É–µ–º npm install...');
  try {
    execSync('npm install', { stdio: 'inherit' });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:', error.message);
    process.exit(1);
  }
}

console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('üöÄ –ì–æ—Ç–æ–≤ –∫ —Å–±–æ—Ä–∫–µ!');
